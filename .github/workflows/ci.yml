name: Build and push images

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: odrling/chimera
  # Chimera linux version
  VERSION: 20240122
  # architectures available in the main manifest
  ARCHS: x86_64 aarch64 riscv64 ppc64 ppc64le

on:
  push:
    branches:
      - main

jobs:
  build:
    name: ${{ matrix.config.arch }} build
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    strategy:
      fail-fast: false
      matrix:
        config:
          - arch: x86_64
          - arch: aarch64
          - arch: riscv64
          - arch: ppc64
          - arch: ppc64le

    steps:
      - uses: actions/checkout@v4

      - name: Docker Metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.IMAGE_NAME }}

      - name: Build image
        id: build-image
        uses: redhat-actions/buildah-build@v2
        with:
          image: ${{ env.IMAGE_NAME }}
          tags: ${{ github.sha }}-${{ matrix.config.arch }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            ARCH=${{ matrix.config.arch }}
            VERSION=${{ env.VERSION }}
          containerfiles: Containerfile

      - name: Push image
        id: push-image
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ steps.build-image.outputs.image }}
          tags: ${{ steps.build-image.outputs.tags }}
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}


  push_manifest:
    needs: build
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - uses: actions/checkout@v4

      - name: Podman login
        uses: redhat-actions/podman-login@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: create and push manifest for supported platforms
        run: |
          image_base=${{ env.IMAGE_NAME }}:${{ github.sha }}
          podman manifest create $image_base
          archs="${{ env.ARCHS }}"

          for arch in $archs; do
            podman pull ${{ env.REGISTRY }}/$image_base-$arch
            podman manifest add $image_base ${{ env.REGISTRY }}/$image_base-$arch
          done

          podman manifest push $image_base ${{ env.REGISTRY }}/$image_base
          podman manifest push $image_base ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.ref_name }}

